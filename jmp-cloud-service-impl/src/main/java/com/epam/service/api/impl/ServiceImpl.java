package com.epam.service.api.impl;import java.time.LocalDate;import java.util.Collection;import java.util.HashMap;import java.util.LinkedList;import java.util.List;import java.util.Map;import java.util.Optional;import com.epam.jmp.dto.BankCard;import com.epam.jmp.dto.Subscription;import com.epam.jmp.dto.User;import com.epam.service.api.Service;public class ServiceImpl implements Service {    private final Map<User, List<Subscription>> storage;    public ServiceImpl() {        storage = new HashMap<>();    }    @Override    public void subscribe(BankCard bankCard) {       User user = bankCard.getUser();       String number = bankCard.getNumber();       Subscription subscription =  new Subscription(number, LocalDate.now());      storage.computeIfAbsent(user, (list)-> new LinkedList<>()).add(subscription);    }    @Override    public Optional<Subscription> getSubscriptionByCardNumber(String number) {        return storage.values()            .stream()            .flatMap(Collection::stream)            .filter(subscription -> subscription.cardNumber().equals(number))            .findFirst();    }    @Override    public List<User> getAllUsers() {        return storage.keySet().stream().toList();    }}